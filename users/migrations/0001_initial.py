# Generated by Django 5.2.6 on 2025-10-14 14:33

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.CharField(max_length=50, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='not_known', max_length=10)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('is_doctor', models.BooleanField(default=False)),
                ('profile_avatar', models.ImageField(blank=True, default='users/profiles/default.png', upload_to='users/profiles')),
                ('address_line', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('code_postal', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_users', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_users', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=50, verbose_name='Apellido')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Teléfono')),
                ('identification_type', models.CharField(choices=[('CI', 'CI'), ('DNI', 'DNI'), ('Passport', 'Pasaporte'), ('License', 'Licencia de Conducir'), ('Other', 'Otro')], default='CI', max_length=20, verbose_name='Tipo de Identificación')),
                ('identification_number', models.CharField(max_length=50, unique=True, verbose_name='Número de Identificación')),
                ('gender', models.CharField(choices=[('Male', 'Masculino'), ('Female', 'Femenino'), ('Other', 'Otro')], max_length=10, verbose_name='Género')),
                ('date_of_birth', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('address_line', models.CharField(max_length=200, verbose_name='Dirección')),
                ('city', models.CharField(max_length=50, verbose_name='Ciudad')),
                ('region', models.CharField(max_length=50, verbose_name='Región/Estado')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Código Postal')),
                ('country', models.CharField(default='Paraguay', max_length=50, verbose_name='País')),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('Unknown', 'Desconocido')], default='Unknown', max_length=10, verbose_name='Tipo de Sangre')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Alergias')),
                ('medical_notes', models.TextField(blank=True, null=True, verbose_name='Notas Médicas')),
                ('emergency_contact_name', models.CharField(max_length=100, verbose_name='Nombre del Contacto de Emergencia')),
                ('emergency_contact_relationship', models.CharField(max_length=50, verbose_name='Relación del Contacto')),
                ('emergency_contact_phone', models.CharField(max_length=20, verbose_name='Teléfono del Contacto de Emergencia')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Especialidad',
                'verbose_name_plural': 'Especialidades',
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('department', models.CharField(default='Administración', max_length=50)),
                ('can_create_users', models.BooleanField(default=True)),
                ('can_create_groups', models.BooleanField(default=True)),
                ('can_assign_roles', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('bio', models.TextField()),
                ('specialty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.specialty')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctores',
            },
        ),
        migrations.CreateModel(
            name='Receptions',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recepcion',
                'verbose_name_plural': 'Recepcionistas',
            },
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('time', models.TimeField(verbose_name='Hora')),
                ('shift', models.CharField(choices=[('MAÑANA', 'Mañana'), ('TARDE', 'Tarde'), ('NOCHE', 'Noche')], default='MAÑANA', max_length=10, verbose_name='Turno')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='Orden')),
                ('priority', models.CharField(choices=[('NIVEL I', 'Nivel I'), ('Nivel II', 'Nivel II'), ('Nivel III', 'Nivel III'), ('Nivel IV', 'Nivel IV'), ('Nivel V', 'Nivel V')], default='Nivel IV', max_length=10, verbose_name='Prioridad')),
                ('consultorio', models.CharField(default='', max_length=10)),
                ('temperatura', models.FloatField(blank=True, null=True)),
                ('presion_sistolica', models.IntegerField(blank=True, null=True)),
                ('presion_diastolica', models.IntegerField(blank=True, null=True)),
                ('frecuencia_respiratoria', models.IntegerField(blank=True, null=True)),
                ('pulso', models.IntegerField(blank=True, null=True)),
                ('saturacion_oxigeno', models.IntegerField(blank=True, null=True)),
                ('peso', models.FloatField(blank=True, null=True)),
                ('talla', models.FloatField(blank=True, null=True)),
                ('circunferencia_abdominal', models.FloatField(blank=True, null=True)),
                ('historia_actual', models.TextField(blank=True, default='', null=True)),
                ('evolucion', models.TextField(blank=True, default='', null=True)),
                ('impresion_diagnostica', models.TextField(blank=True, default='', null=True)),
                ('hba1c', models.FloatField(blank=True, null=True)),
                ('indicaciones', models.TextField(blank=True, default='', null=True)),
                ('status', models.CharField(choices=[('EN ESPERA', 'En espera'), ('ATENDIDO', 'Atendido'), ('CANCELADA', 'Cancelada')], default='EN ESPERA', max_length=15, verbose_name='Estado')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.patient', verbose_name='Paciente')),
                ('servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.specialty')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.doctor', verbose_name='Médico')),
            ],
            options={
                'verbose_name': 'Consulta',
                'verbose_name_plural': 'Consultas',
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='Reset_token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=50, unique=True)),
                ('token', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reset Token',
                'verbose_name_plural': 'Reset Tokens',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication', models.CharField(max_length=100, verbose_name='Medicamento')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.consultation', verbose_name='Consulta')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.doctor', verbose_name='Médico')),
            ],
            options={
                'verbose_name': 'Receta',
                'verbose_name_plural': 'Recetas',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='patient',
            name='assigned_doctor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.doctor', verbose_name='Doctor Asignado'),
        ),
        migrations.CreateModel(
            name='DoctorSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('LUNES', 'Lunes'), ('MARTES', 'Martes'), ('MIERCOLES', 'Miércoles'), ('JUEVES', 'Jueves'), ('VIERNES', 'Viernes'), ('SABADO', 'Sábado'), ('DOMINGO', 'Domingo')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('consultorio', models.CharField(max_length=20)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='users.doctor')),
            ],
            options={
                'verbose_name': 'Horario de Doctor',
                'verbose_name_plural': 'Horarios de Doctores',
                'ordering': ['doctor', 'day', 'start_time'],
            },
        ),
    ]
